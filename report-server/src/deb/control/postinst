#!/bin/bash

set -e

# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package ch 6.5 http://www.debian.org/doc/debian-policy/ch-maintainerscripts.html#s-mscriptsinstact


case "$1" in

    abort-deconfigure)
        echo "### postinst abort-deconfigure ###"
        ;;

    abort-remove)
        echo "### postinst abort-remove ###"
        ;;

    abort-upgrade)
        echo "### postinst abort-upgrade ###"
        ;;

    configure)
        echo "### postinst configure ###"

        echo "Determining Deployment Environment"

        # Expect Hostnames structured like si01-prd-0401, si01-stg-04cl etc'
        # Note: Regex specified in this form as trouble was had with shorter single braket versions
        regex="([[:alpha:]][[:alpha:]])([[:digit:]][[:digit:]])-([[:alnum:]]+)-([[:digit:]][[:digit:]])([[:alnum:]][[:alnum:]])"
        # For development test environments of type (trdci0909)
        regexDEV="(trd)[[:alpha:]][[:alpha:]][[:digit:]][[:digit:]][[:digit:]][[:digit:]]"

        this_hostname=$(hostname)
        echo "hostname (${this_hostname})"
        echo "regex (${regex})"
        echo "regex (${regexDEV})"

        if [[ $this_hostname =~ $regex ]] || [[ $this_hostname =~ $regexDEV ]]
        then
            solution_instance="${BASH_REMATCH[1]}${BASH_REMATCH[2]}"
            solution_environment="${BASH_REMATCH[3]}"
            cluster_id="${BASH_REMATCH[4]}"
            node_id="${BASH_REMATCH[5]}"
        else
            echo "FAILURE: Unable to determine environment" >&2
            exit 1
        fi

        this_clustername="${solution_instance}-${solution_environment}-${cluster_id}cl.${solution_instance}.q-free.com"
        this_nodename="${this_hostname}"

        echo "Solution(${solution_instance})"
        echo "Environment(${solution_environment})"
        echo "ClusterID(${cluster_id})"
        echo "NodeID(${node_id})"
        echo "This NodeName(${this_nodename})"
        echo "This ClusterName(${this_clustername})"
	    
        echo "postinst configure: Configuring report-server-${project.version}..."

        # This ensures that:
        #
        #   1. Regardless of which user runs the install or upgrade shell 
        #      script, a log file can be written to the directory containing the 
        #      script. For the install script, this user will be "postgres". For 
        #      the upgrade script, this user will probably be the user that runs 
        #      the script.
        #
        #   2. The user running one of the shell scripts in this package has the
        #      permission to change directory and read SQL scripts that are 
        #      stored in a subdirectory beside the shell script being executed.
        #
        # For questions, see Jeffrey Zelt.
        chmod -R 777 /tmp/report-server-${project.version}
	
	# Add symlink to PostgreSQL driver to Tomcat installation
        if ! [ -L /usr/share/tomcat8/lib/postgresql.jar ]; then
	    ln -s ${app.rootDir}/common/lib/jdbc-driver-postgres.jar /usr/share/tomcat8/lib/postgresql.jar
        fi	
        
    ;;

    *)
        echo "### postinst default ###"
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
        ;;

esac

echo "### postinst done ###"
exit 0

